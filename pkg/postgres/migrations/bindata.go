// Code generated by go-bindata.
// sources:
// 20180827021436_users_table.down.sql
// 20180827021436_users_table.up.sql
// 20180828183535_set_utc_timezone.down.sql
// 20180828183535_set_utc_timezone.up.sql
// 20180905005007_create_posts_table.down.sql
// 20180905005007_create_posts_table.up.sql
// 20180905005048_create_post_votes_table.down.sql
// 20180905005048_create_post_votes_table.up.sql
// 20180926005608_create_comments_table.down.sql
// 20180926005608_create_comments_table.up.sql
// 20180926010031_add_calculate_depth.down.sql
// 20180926010031_add_calculate_depth.up.sql
// 20180926010233_create_comment_votes_table.down.sql
// 20180926010233_create_comment_votes_table.up.sql
// bindata.go
// DO NOT EDIT!

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __20180827021436_users_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x2d\x4e\x2d\x2a\xb6\x06\x04\x00\x00\xff\xff\xc8\x3d\x4e\x55\x1b\x00\x00\x00")

func _20180827021436_users_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20180827021436_users_tableDownSql,
		"20180827021436_users_table.down.sql",
	)
}

func _20180827021436_users_tableDownSql() (*asset, error) {
	bytes, err := _20180827021436_users_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20180827021436_users_table.down.sql", size: 27, mode: os.FileMode(420), modTime: time.Unix(1535316351, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20180827021436_users_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcc\xb1\xca\xc2\x30\x14\xc5\xf1\xbd\x4f\x71\xc6\x16\xbe\x37\xf8\xa6\xa8\x57\x28\xa6\xb5\xc6\x1b\xb0\x63\x30\x17\x1a\x48\x2b\x24\x16\x5f\x5f\xb4\x2e\x5d\xba\x9e\xdf\x9f\xb3\x37\xa4\x98\xc0\x6a\xa7\x09\x73\x96\x94\xcb\x02\x00\x82\x47\x96\x14\x5c\x44\x67\xea\x46\x99\x1e\x27\xea\xff\xbe\x34\x07\x0f\xa6\x1b\xc3\xb6\xf5\xc5\x12\xda\x33\xa3\xb5\x5a\xff\x34\x4b\x9a\xdc\x28\x1b\x89\x8c\x2e\xc4\x0d\x1f\x5c\x1e\x16\x5e\xef\xf7\x24\xee\x29\x1e\x5c\x37\x74\x65\xd5\x74\x38\xd0\x51\x59\xcd\x98\x1e\xaf\xb2\x5a\x22\x2f\x51\xd6\xd1\xe7\xa0\xa8\xfe\xdf\x01\x00\x00\xff\xff\x4f\x3e\xd3\x4e\xea\x00\x00\x00")

func _20180827021436_users_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20180827021436_users_tableUpSql,
		"20180827021436_users_table.up.sql",
	)
}

func _20180827021436_users_tableUpSql() (*asset, error) {
	bytes, err := _20180827021436_users_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20180827021436_users_table.up.sql", size: 234, mode: os.FileMode(420), modTime: time.Unix(1535316298, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20180828183535_set_utc_timezoneDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4e\x2d\x51\x28\xc9\xcc\x4d\xad\xca\xcf\x4b\x55\x08\xf1\x57\x50\xcf\xc9\x4f\x4e\xcc\x01\x89\xa8\x5b\x03\x02\x00\x00\xff\xff\xfc\x5b\x1f\x11\x1c\x00\x00\x00")

func _20180828183535_set_utc_timezoneDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20180828183535_set_utc_timezoneDownSql,
		"20180828183535_set_utc_timezone.down.sql",
	)
}

func _20180828183535_set_utc_timezoneDownSql() (*asset, error) {
	bytes, err := _20180828183535_set_utc_timezoneDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20180828183535_set_utc_timezone.down.sql", size: 28, mode: os.FileMode(420), modTime: time.Unix(1535461567, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20180828183535_set_utc_timezoneUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4e\x2d\x51\x28\xc9\xcc\x4d\xad\xca\xcf\x4b\x55\x08\xf1\x57\x50\x0f\x0d\x71\x56\xb7\x06\x04\x00\x00\xff\xff\x01\xf6\x08\xbb\x16\x00\x00\x00")

func _20180828183535_set_utc_timezoneUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20180828183535_set_utc_timezoneUpSql,
		"20180828183535_set_utc_timezone.up.sql",
	)
}

func _20180828183535_set_utc_timezoneUpSql() (*asset, error) {
	bytes, err := _20180828183535_set_utc_timezoneUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20180828183535_set_utc_timezone.up.sql", size: 22, mode: os.FileMode(420), modTime: time.Unix(1535461551, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20180905005007_create_posts_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\xc8\x2f\x2e\x29\xb6\x06\x04\x00\x00\xff\xff\x09\xa2\x6c\xd1\x1b\x00\x00\x00")

func _20180905005007_create_posts_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20180905005007_create_posts_tableDownSql,
		"20180905005007_create_posts_table.down.sql",
	)
}

func _20180905005007_create_posts_tableDownSql() (*asset, error) {
	bytes, err := _20180905005007_create_posts_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20180905005007_create_posts_table.down.sql", size: 27, mode: os.FileMode(420), modTime: time.Unix(1536088831, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20180905005007_create_posts_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8c\xb1\x0a\xc2\x30\x18\x06\xf7\x3e\xc5\x37\xb6\xe0\x1b\x38\xc5\xfa\x57\x8a\x69\x2c\xe9\x5f\xb0\x93\x54\x13\x30\x50\x8c\x24\x29\xe2\xdb\x8b\xd6\x45\x70\xbd\x3b\xae\xd4\x24\x98\xc0\x62\x23\x09\x77\x1f\x53\xcc\x33\x00\x70\x06\xd1\x06\x37\x4e\x68\x75\xdd\x08\x3d\x60\x4f\xc3\xea\xa3\xc6\x39\x5d\x7d\x38\x39\x83\x5a\x31\xed\x48\x43\x53\x45\x9a\x54\x49\x1d\xe6\x68\x43\xcc\x9d\x29\x96\x36\xb9\x34\x59\x30\x1d\x19\xea\xc0\x50\xbd\x94\x8b\x38\x7b\xf3\xfc\xc7\x2f\xc1\x8e\xc9\x1a\x70\xdd\x50\xc7\xa2\x69\xb1\xa5\x4a\xf4\x92\x71\xf3\x8f\xfc\x7b\x35\x76\xb2\xbf\xd1\x7b\x90\x15\xeb\x57\x00\x00\x00\xff\xff\x13\xa4\x58\xae\xce\x00\x00\x00")

func _20180905005007_create_posts_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20180905005007_create_posts_tableUpSql,
		"20180905005007_create_posts_table.up.sql",
	)
}

func _20180905005007_create_posts_tableUpSql() (*asset, error) {
	bytes, err := _20180905005007_create_posts_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20180905005007_create_posts_table.up.sql", size: 206, mode: os.FileMode(420), modTime: time.Unix(1536088816, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20180905005048_create_post_votes_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\xc8\x2f\x2e\x89\x2f\xcb\x2f\x49\x2d\xb6\x06\x04\x00\x00\xff\xff\x2f\xd5\x5f\x4a\x20\x00\x00\x00")

func _20180905005048_create_post_votes_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20180905005048_create_post_votes_tableDownSql,
		"20180905005048_create_post_votes_table.down.sql",
	)
}

func _20180905005048_create_post_votes_tableDownSql() (*asset, error) {
	bytes, err := _20180905005048_create_post_votes_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20180905005048_create_post_votes_table.down.sql", size: 32, mode: os.FileMode(420), modTime: time.Unix(1536088878, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20180905005048_create_post_votes_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xb1\xce\x82\x30\x00\xc4\xf1\x9d\xa7\xb8\xb1\xcd\xc7\x37\x30\x3b\x61\x73\x2a\x01\xab\xd6\x32\x30\x11\x92\x76\x68\x42\x82\xa1\xe8\xf3\x1b\x50\x8c\x83\xf3\xff\x77\xa7\x0c\x73\x4b\xd8\x7c\x5b\x11\xb7\x21\x4e\xed\x63\x98\x7c\x14\x09\x00\x04\x87\xe8\xc7\xd0\xf5\x38\x9b\xe2\x98\x9b\x06\x25\x9b\x74\x49\xb3\x1a\xdb\xe0\x50\x68\xcb\x3d\x0d\x0c\x77\x34\xd4\x8a\x57\xdc\xa3\x1f\xa3\x08\x4e\xbe\xe8\xf2\xfa\x5b\xce\xe9\x4b\xd6\xba\xb8\xd4\x14\xeb\x77\xba\x4e\xdf\xd9\xf9\x7e\xea\x3e\x37\xfa\x64\xa1\xeb\xaa\x82\x3a\x50\x95\x62\x8d\x10\xff\x59\x8a\xbf\x4c\xca\x44\x6e\x9e\x01\x00\x00\xff\xff\xed\x55\x93\xc9\xde\x00\x00\x00")

func _20180905005048_create_post_votes_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20180905005048_create_post_votes_tableUpSql,
		"20180905005048_create_post_votes_table.up.sql",
	)
}

func _20180905005048_create_post_votes_tableUpSql() (*asset, error) {
	bytes, err := _20180905005048_create_post_votes_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20180905005048_create_post_votes_table.up.sql", size: 222, mode: os.FileMode(420), modTime: time.Unix(1536088865, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20180926005608_create_comments_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x48\xce\xcf\xcd\x4d\xcd\x2b\x29\xb6\x06\x04\x00\x00\xff\xff\x0f\x45\x42\x5b\x1e\x00\x00\x00")

func _20180926005608_create_comments_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20180926005608_create_comments_tableDownSql,
		"20180926005608_create_comments_table.down.sql",
	)
}

func _20180926005608_create_comments_tableDownSql() (*asset, error) {
	bytes, err := _20180926005608_create_comments_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20180926005608_create_comments_table.down.sql", size: 30, mode: os.FileMode(420), modTime: time.Unix(1537903644, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20180926005608_create_comments_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcd\x41\x4b\xc4\x30\x10\x05\xe0\xfb\xfe\x8a\x77\xec\x82\xff\xc0\x53\x5c\x67\xa5\x98\xc6\x25\x3b\x05\x7b\x92\xda\x0c\x18\x68\x9b\x92\x44\xc4\x7f\x2f\xd6\x12\x44\xec\xf5\xbd\x6f\xde\x9c\x2c\x29\x26\xb0\xba\xd3\x84\x21\x4c\x93\xcc\x39\x55\x07\x00\xf0\x0e\x49\xa2\xef\x47\x5c\x6c\xdd\x28\xdb\xe1\x91\xba\x9b\xb5\x5a\x42\xca\x2f\xde\xa1\x36\x4c\x0f\x64\x61\xe9\x4c\x96\xcc\x89\xae\x6b\x95\x2a\xef\x8e\x9b\xec\xa3\xcc\x7b\xb6\xfc\x2b\x7c\x4b\x24\xee\x5c\xbc\x27\x89\xbf\xb8\x93\x25\xbf\x15\x67\x9e\x18\xa6\xd5\xfa\xa7\x7b\x0d\xee\x13\x4c\xcf\xfc\x27\x1f\xa2\xf4\x59\x1c\xb8\x6e\xe8\xca\xaa\xb9\xe0\x9e\xce\xaa\xd5\x8c\x39\x7c\x54\x65\x78\x94\xff\xd1\xf7\xd0\xe1\x78\xfb\x15\x00\x00\xff\xff\x04\x50\x15\xca\x38\x01\x00\x00")

func _20180926005608_create_comments_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20180926005608_create_comments_tableUpSql,
		"20180926005608_create_comments_table.up.sql",
	)
}

func _20180926005608_create_comments_tableUpSql() (*asset, error) {
	bytes, err := _20180926005608_create_comments_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20180926005608_create_comments_table.up.sql", size: 312, mode: os.FileMode(420), modTime: time.Unix(1537903624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20180926010031_add_calculate_depthDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\x48\x4e\xcc\x49\x2e\xcd\x49\x2c\x49\x8d\x4f\x49\x2d\x28\xc9\xb0\x06\x04\x00\x00\xff\xff\xb4\x50\xf3\x71\x1e\x00\x00\x00")

func _20180926010031_add_calculate_depthDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20180926010031_add_calculate_depthDownSql,
		"20180926010031_add_calculate_depth.down.sql",
	)
}

func _20180926010031_add_calculate_depthDownSql() (*asset, error) {
	bytes, err := _20180926010031_add_calculate_depthDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20180926010031_add_calculate_depth.down.sql", size: 30, mode: os.FileMode(420), modTime: time.Unix(1537903904, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20180926010031_add_calculate_depthUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8d\x41\x4f\x83\x40\x14\x84\xef\xfb\x2b\xe6\xc0\x41\xe3\x45\xcf\xc4\xc3\x0a\x03\xdd\x64\x5d\xcc\x63\x89\xc7\x86\xc0\xa6\x92\x50\xc4\x76\xfd\xff\x46\xa5\xdd\x74\x6e\x6f\xf2\xbe\xf9\x0a\xa1\xf6\x44\x23\x10\xbe\x59\x5d\x10\x55\xe7\x0a\x6f\x1a\x87\xa1\x9f\x87\xef\xb9\x8f\x61\x3f\x86\x35\x7e\xdc\xad\xfd\x29\x2c\x71\x3f\x8d\x98\x96\x18\x0e\xe1\x74\x0f\x25\xf4\x9d\xb8\xf6\xd2\x40\xb7\xc8\x32\x55\xb2\xb0\x5a\x88\x8d\xf8\xc3\x61\x9c\x67\x4d\x51\x2f\xac\x8d\x53\xd8\x62\x2a\xa4\x5d\xd3\xc2\x75\xd6\xc2\xef\x98\x3e\x7e\xf3\xaf\xc1\x63\x7e\x6d\xe9\x4a\x98\x2a\xdd\x2d\x2d\x0b\x8f\xab\xaa\xb9\x95\x57\xd2\xbc\x62\xf8\x3c\x1e\xc3\x12\xcf\x78\xdf\x51\x88\x69\xc4\x73\x92\xa7\xa9\x4d\x76\xc3\x3f\xe0\x29\x57\x74\x65\xae\xb2\x0c\x56\xbb\xba\xd3\x35\xb1\xce\xeb\xe1\xfc\x35\xe7\x3f\x01\x00\x00\xff\xff\x11\x7e\x5b\xf2\x45\x01\x00\x00")

func _20180926010031_add_calculate_depthUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20180926010031_add_calculate_depthUpSql,
		"20180926010031_add_calculate_depth.up.sql",
	)
}

func _20180926010031_add_calculate_depthUpSql() (*asset, error) {
	bytes, err := _20180926010031_add_calculate_depthUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20180926010031_add_calculate_depth.up.sql", size: 325, mode: os.FileMode(420), modTime: time.Unix(1537903917, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20180926010233_create_comment_votes_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x48\xce\xcf\xcd\x4d\xcd\x2b\x89\x2f\xcb\x2f\x49\x2d\xb6\x06\x04\x00\x00\xff\xff\x25\x42\x08\x7d\x23\x00\x00\x00")

func _20180926010233_create_comment_votes_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20180926010233_create_comment_votes_tableDownSql,
		"20180926010233_create_comment_votes_table.down.sql",
	)
}

func _20180926010233_create_comment_votes_tableDownSql() (*asset, error) {
	bytes, err := _20180926010233_create_comment_votes_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20180926010233_create_comment_votes_table.down.sql", size: 35, mode: os.FileMode(420), modTime: time.Unix(1537903982, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20180926010233_create_comment_votes_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xbd\x0e\x82\x30\x14\x47\xf1\x9d\xa7\xf8\x8f\x6d\xc4\x81\xd9\x09\x9b\xab\x12\xb0\x9a\x6b\x1d\x98\x08\xb1\x1d\x9a\x80\x24\x6d\xf5\xf9\x8d\x1f\x18\x07\xe7\xf3\xcb\x51\x4c\xa5\x21\x98\x72\xdd\x10\x2e\xd3\x38\xba\x6b\xea\xee\x53\x72\x51\x64\x00\xe0\x2d\xa2\x0b\xbe\x1f\x70\xe4\x6a\x5f\x72\x8b\x9a\xda\xfc\x95\x9e\x2a\x74\xde\xa2\xd2\x86\xb6\xc4\x60\xda\x10\x93\x56\x74\xc2\x2d\xba\x10\x85\xb7\xf2\x4d\xe7\xf1\x7f\xfc\xa9\x3f\xde\xba\x21\xf5\x5f\xaa\x0f\x06\xfa\xdc\x34\x50\x3b\x52\xb5\x98\x23\xc4\xb2\xc8\xb1\x28\xa4\xcc\xe4\xea\x11\x00\x00\xff\xff\xfa\x71\x82\x6d\xc8\x00\x00\x00")

func _20180926010233_create_comment_votes_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20180926010233_create_comment_votes_tableUpSql,
		"20180926010233_create_comment_votes_table.up.sql",
	)
}

func _20180926010233_create_comment_votes_tableUpSql() (*asset, error) {
	bytes, err := _20180926010233_create_comment_votes_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20180926010233_create_comment_votes_table.up.sql", size: 200, mode: os.FileMode(420), modTime: time.Unix(1537904034, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5b\xdf\x6f\xe3\x36\x12\x7e\xb6\xfe\x0a\x35\x40\x0b\xfb\x90\xcb\x4a\xa2\x7e\x50\x01\xf6\xa5\xdd\x1e\xd0\x87\x6b\x81\x6b\xfb\x74\x3c\x04\x14\x49\xa5\xc6\x25\x56\x6a\x3b\x2d\x77\x17\xfb\xbf\x1f\x3e\xce\x28\xf1\x66\x6d\x4b\x76\x9c\xa0\x07\x6c\xd6\xb6\x2c\x0e\x67\x46\xfc\x66\xbe\x19\xd2\x6f\xde\xc4\xdf\x75\xd6\xc5\xd7\x6e\xe1\x96\x7a\xed\x6c\xdc\xbc\x8f\xaf\xbb\xbf\x37\xf3\x85\xd5\x6b\x7d\x11\xbd\x79\x13\xaf\xba\xfb\xa5\x71\xab\x4b\xbc\xcf\x92\x54\x26\x32\xab\x92\x2c\xcd\x45\x79\x75\xbf\x72\xcb\xd5\xd5\x5a\x37\x37\xee\xc2\x76\x7f\x2e\x2e\x56\xbf\xdf\x0c\xdc\x76\x7f\xf7\xe4\x26\x99\x4a\x51\x88\xe2\x6a\xe5\xd6\x57\xf7\x6b\x73\xb5\x9e\xdf\xba\x0f\xdd\x62\xab\xc0\x9d\xf7\x3e\x91\x5a\x27\x45\x82\x7f\xd5\x95\x59\x3a\xbd\x76\x57\x77\xdd\x6a\xbd\x53\xd1\xbd\x77\x6f\x97\x9c\xcb\xcd\x7b\xaf\xfe\xe8\xd6\x6e\x48\xfc\x9e\x21\x4f\xe7\xc8\xca\x24\x29\xca\xe4\x61\x80\xe9\x6e\x6f\xdd\x62\x8f\x01\x03\x03\xb6\xc8\x4f\x93\x44\xa4\x57\xda\xda\x2b\xa3\x6f\xcc\xfd\x0d\x46\x59\x77\xb7\xfe\x6d\xbb\xf4\xdd\xb7\x6f\x95\x9d\x09\xf1\x44\x95\x01\x17\x8d\x19\xf5\x38\x53\xbf\x3a\xaf\x3b\x7c\x7a\xf7\x53\xfc\xe3\x4f\xbf\xc4\xdf\xbf\xfb\xe1\x97\xaf\xa2\xe8\x4e\x9b\xff\xea\x6b\x17\xdf\xce\xaf\x97\x7a\x3d\xef\x16\xab\x28\x9a\xdf\xde\x75\xcb\x75\x3c\x8d\x26\x67\xcd\xfb\xb5\x5b\x9d\x45\x93\x33\xd3\xdd\xde\x2d\xdd\x6a\xf5\xe6\xfa\xc3\xfc\x0e\x17\xda\xdb\x35\x5e\xe6\x1d\xfd\xff\x66\xde\xdd\xaf\xe7\x37\xf8\xd0\x85\x01\x77\x7a\xfd\xdb\x9b\x76\x7e\xe3\xf0\x06\x17\x56\xeb\xe5\x7c\x71\x1d\xbe\xc3\x3a\x3c\x8b\x66\x51\xd4\xde\x2f\x4c\xaf\xde\xbf\x9c\xb6\x53\xbc\x89\xff\xfd\x1f\x4c\x7b\x1e\x2f\xf4\xad\x8b\x69\xd8\x2c\x9e\xf6\x57\xdd\x72\xd9\x2d\x67\xf1\xc7\x68\x72\xfd\x21\x7c\x8a\x2f\xdf\xc6\xd0\xea\xe2\x47\xf7\x27\x84\xb8\xe5\x34\xa8\x8d\xcf\xdf\xde\xb7\xad\x5b\x06\xb1\xb3\x59\x34\x99\xb7\x61\xc0\x57\x6f\xe3\xc5\xfc\x06\x22\x26\x4b\xb7\xbe\x5f\x2e\xf0\xf1\x3c\x6e\x6f\xd7\x17\xdf\x43\x7a\x3b\x3d\x83\xa0\xf8\xeb\xdf\x2f\xe3\xaf\xff\x38\x23\x4d\xc2\x5c\xb3\x68\xf2\x29\x8a\x26\x7f\xe8\x65\xdc\xdc\xb7\x31\xcd\x43\x93\x44\x93\x2b\x52\xe7\x6d\x3c\xef\x2e\xbe\xeb\xee\xde\x4f\xbf\x69\xee\xdb\xf3\xf8\xfa\xc3\x2c\x9a\x98\x9b\xef\x7b\x4d\x2f\xbe\xbb\xe9\x56\x6e\x3a\x8b\x4e\xa5\x0f\xc4\x90\xfc\x1d\x82\xdc\x72\x49\x7a\xf3\xc5\xe6\xbe\xbd\xf8\x16\xaa\x4f\x67\xe7\xb8\x23\xfa\x14\x45\xeb\xf7\x77\x2e\xd6\xab\x95\x5b\xc3\xe5\xf7\x66\x0d\x29\xc1\x3e\x7e\x1e\xd1\x64\xbe\x68\xbb\x38\xee\x56\x17\xff\x98\xdf\xb8\x1f\x16\x6d\xf7\x30\x8e\x1f\x61\x7f\x7d\x43\x42\x78\x86\x71\xcc\x8f\x31\x9a\xac\xe6\x1f\xc2\xe7\xf9\x62\x5d\xe6\xd1\xe4\x16\xd1\x34\x7e\x10\xfa\xcf\xce\xba\x70\xf1\x97\xf9\xad\x8b\xb1\x4c\x2e\xf0\x0e\xf3\x84\xa5\x32\x6d\xe7\x4f\xe7\x9a\xc5\x3f\xea\x5b\x37\x9d\xf1\x0c\x98\x93\xad\x6c\xe7\x17\x98\x3d\xfa\xb4\x67\xec\xcf\xf3\x0f\x18\x1b\xb4\xf9\x7c\x28\x14\xdd\x3b\x14\xba\x4e\x67\x9b\x9a\x7f\x2e\x00\xa6\x0d\x09\x80\x71\xd3\xd9\xa3\xa1\x5f\x48\x60\xeb\x77\x0b\xf9\x61\xf5\x6e\xbe\x9c\xce\xe2\xa6\xeb\x6e\x36\x47\xeb\x9b\xd5\x80\xe5\xef\x57\x64\xb8\x5b\xb6\xda\xb8\x8f\x9f\x36\x46\xf3\x92\xc0\x2a\xbf\xba\xda\x9d\x9c\xde\x75\x7f\x2e\x7e\xfe\xfd\x26\x7e\xcb\x2b\x64\x7a\xa6\x7c\xda\x2a\x2f\x1b\xe5\x13\xa9\x7c\x92\x6c\xff\x6b\x5b\xe5\xab\x4c\xf9\xa4\x56\xbe\xc5\x6b\xab\x7c\x91\xd0\x98\x2a\x55\xbe\xca\xe9\x3a\xde\x17\x85\xf2\x6d\x42\xd7\x0a\xa1\x7c\x95\x28\x2f\x2d\x5d\x4b\x8c\xf2\x89\x23\x39\x45\xa9\x7c\x26\x95\xcf\xac\xf2\xb9\xa3\xd7\x4c\x2b\xdf\x94\xca\x27\xf8\xcb\x3f\x9f\x1f\x7f\x46\x2a\x2f\xf8\x7e\xcc\x93\x36\x9b\x7a\x9e\xf5\xf1\x69\xd8\x03\x8c\xa5\x6d\x31\xaa\x47\xdc\x46\x8c\x8b\x26\x93\x11\x5e\x3d\x8f\x26\x93\xb3\x11\xfc\xe1\xec\x3c\x9a\xcc\x1e\x00\x32\x2c\x17\x6a\xfe\x2d\xe0\x7c\x53\xcd\x00\xf4\x87\x68\x3a\xda\xe2\xa1\x08\xf6\x10\x78\x42\xe8\xb8\x7c\xfb\x74\x19\x7e\x04\x40\x2f\xe3\x71\x76\xc6\x80\xe4\x65\x9c\x55\xe7\x31\xb0\x75\xb9\x09\xbd\x69\x9e\x25\xb3\x70\x1d\x88\xb9\x24\x44\xfd\xba\x98\xfb\x69\x5a\x88\x42\xa4\xa5\x28\xd2\xf3\x38\x99\x7d\x8a\x26\x1a\x7a\x7c\x13\x3c\xf0\x31\x98\x7d\x19\xb3\xf5\x50\xf2\x32\xfc\xff\xe9\xe1\xc1\xe9\xf3\xb1\x68\xf8\xf5\xee\x68\x2c\x18\xe5\x8d\x51\xbe\x49\x95\x37\x5a\x79\x93\x29\x2f\x12\xe5\xd3\x5c\x79\x83\xf5\x9f\x2a\xdf\x60\x9d\xb6\x84\x09\x53\x2a\x9f\x96\xca\x37\x4e\x79\x51\x29\xdf\x4a\xe5\x75\xa9\xbc\x96\xca\x17\x15\xe1\x00\x9f\x9b\x82\xef\x6d\x94\x6f\x12\xe5\x4b\xc1\x72\x2b\xe5\x53\xad\x7c\x0e\xbc\x34\xca\x67\x39\xc9\x2b\x5a\xfa\x6b\x72\xe5\x33\x60\xc2\x2a\xdf\x68\xe5\x6b\xa7\xbc\x6d\x95\xaf\xf1\x9d\xa0\x39\x75\xae\x7c\x2d\x95\x37\x90\xab\x95\xd7\x15\xe1\xb0\x12\xca\xd7\xa5\xf2\x35\x74\x87\xed\x19\xd9\x29\x33\xe5\xf3\x8a\xbe\x83\x5d\x85\x51\x3e\xcf\x95\x2f\x2b\xe5\x1d\x74\xc1\x98\x5a\xf9\x14\xd8\xe5\x6b\xf0\x4d\xb0\x11\xd8\xad\x28\x4e\x68\xb6\xc7\x08\xc2\x76\x5b\x90\x8f\xd2\x4c\x79\xab\x95\x17\x42\x79\x2d\xc8\xf6\x82\x65\x60\x7c\xde\x28\x5f\x6b\xe5\xad\x21\xff\x40\x86\xac\x95\x97\x86\x6c\x35\x98\xc3\xd2\x33\x83\x6e\xd0\x23\xf8\xc4\x29\xef\x10\x2f\x2a\xf2\x93\x83\x7e\xac\x27\xee\x83\x2f\x10\x9b\xca\x42\x79\x5b\xd0\x7b\x21\x95\xb7\x89\xf2\x05\xe2\x57\xad\xbc\xb1\xe4\x2b\x8c\xd1\xb0\x29\x23\xdd\xb2\x4c\xf9\xac\xa5\xfb\x6c\xa9\xbc\x4d\x95\x77\xf0\x6d\x42\xcf\xb2\x65\xbf\x27\xe9\x97\xb1\x0b\x6b\x41\xe0\x7b\x41\xf1\x0b\xfe\x3a\x2c\x76\x85\xf5\x7a\xd2\xc8\x15\x24\x0e\xc5\x2d\xa2\xa5\xa3\xa3\x56\x90\xf9\xcc\x98\xb5\x69\xe9\x2b\x44\xac\xde\xc2\x3e\x5e\x89\xfc\x98\x80\x95\xd5\xf2\x94\x01\x6b\x57\x29\xf8\x9c\x1c\x8e\xfc\xda\xe7\x5a\xac\x61\xe0\xca\xd4\x14\xcb\x72\xab\xbc\xb6\x1c\xcf\x5a\xc2\x1f\x72\x2c\x64\x22\x9e\x21\x4e\x21\xe7\xe3\x3b\x8c\xc1\x7a\x86\x2c\x8c\xc5\x7a\x07\x36\x43\x3c\x83\x1e\xe2\x31\x8e\x6c\x62\xa0\x35\xf4\x3d\xf4\x4d\x53\xe5\x53\xb3\x17\x03\x03\x2e\x38\x1e\x0a\x03\x82\x37\x11\x31\x58\xbd\x6f\x07\xc6\xc0\x0c\x87\xe0\x63\x9c\x17\x4e\x0c\x93\x11\x66\xf7\x68\x91\x07\x83\x25\x2f\xd3\xa2\xac\x5e\x03\x2c\xc7\xa7\xf8\x53\x40\x05\xe9\x0f\x29\x2a\xd0\x62\xa4\xf7\x6a\x37\xb5\x05\x84\xda\x92\x64\x34\x0d\xa5\xb2\x23\xa0\xf1\xcc\x1c\xb1\x57\xec\x28\x58\xec\xcb\x16\x7b\xa5\x9f\x02\x12\x2f\x98\x37\x06\x0d\xee\xe1\x90\x1d\x05\x87\x53\x92\xdd\x7d\xed\xbe\xbf\x62\x05\x88\xaa\x0e\xac\x2a\x63\xa6\xb6\xaf\x02\xc4\x38\x9d\x29\x5f\x1a\x62\x5f\x7b\x2b\xc0\x11\x8e\x38\x16\x2a\x23\x44\x3f\xc2\x65\x54\xb7\x76\x1b\x64\x46\xcc\x32\x1e\x36\xe3\xbd\x71\x52\xe8\x8c\x34\xfe\xe8\x5a\xb1\x4c\xa4\x94\xe2\x95\xe0\x73\x7c\x3e\xc1\x82\x95\x5c\x32\x26\x9b\x25\xa3\xa4\xc5\x8e\x72\x05\xe5\x01\x4a\x23\x94\x28\x00\x81\x4b\x68\x81\xa3\x3c\x09\x65\xa5\xa6\xdc\x22\xb5\xf2\x65\xad\x7c\x66\x94\x77\x35\x97\x80\x89\xf2\xb5\x50\xbe\x40\x69\xc8\x65\x23\x00\x1a\xca\xa5\x9c\x80\xe5\x50\x72\x35\xa4\x2f\xca\x97\xbc\x20\x70\xa2\x54\x15\x8d\xf2\x1a\xe5\x49\x4e\xf7\x3f\x94\x8a\x28\x79\x04\x97\x8a\x15\x97\x5b\x82\xf2\x20\x4a\x37\xd8\x07\x19\x09\x97\x43\x78\x85\xfe\xc8\x9d\x25\x82\x03\xca\x2c\x4b\xfe\x11\x56\xf9\x32\x21\xea\x88\x72\x10\x25\x10\x4a\x3f\x94\xbc\xa2\xa6\xf2\xb5\xb2\x64\x2f\x3e\x4b\x41\x65\x97\x40\x99\x65\xa9\xfc\xcd\x05\xcd\x0f\xdd\x51\x1e\xc2\xde\x1c\xe5\x9d\x55\xde\x95\x34\x67\xce\xfa\xd5\x96\xec\x46\x09\x2b\x90\x7f\x6b\x2a\x2d\x51\xe2\x05\xdf\xa3\x7c\xac\x49\x0f\xc3\xfe\x82\x2f\x50\x0a\x4b\xf6\x7b\xd5\x28\xdf\x0a\xa2\xae\xa6\xa2\x40\x65\x40\x77\x1d\xf1\x01\x94\xe5\xb0\x1f\x36\x06\x7a\x5c\x71\x80\xaa\xe9\x59\xeb\x42\xf9\x1c\x65\x2d\x7c\xca\x01\x12\xf2\x24\xd3\x61\xc8\x17\x78\x0e\x25\x95\x99\x4d\x4b\x7e\xc4\xf5\x1a\x3a\x16\xca\xbb\x86\x9e\xfb\xd3\x35\x85\x3f\x3c\x6b\x94\xf6\x85\xa4\xe7\x67\xdc\x91\x01\xf1\x59\xcc\x61\x50\xf0\xc8\x60\xb8\x9b\x3d\x0c\xce\x70\x9a\x40\xf8\x62\x0c\x62\x94\xd9\x7d\x10\x4c\xca\xa3\xa2\x60\x5a\x9e\x3c\x0a\xee\xde\xd4\xfb\xab\x33\x09\xd4\xa3\x01\xac\x0d\xbd\x22\x48\x80\xcc\xef\x63\x17\xb8\xcf\x16\x14\x50\x01\xda\x2c\x19\x06\xd3\xa0\x87\x9e\x89\xa9\x41\xf9\x5f\x40\x6b\xc4\xde\xed\x1e\x84\x0d\xce\x77\x30\xd0\xc6\x7a\xe8\x25\xf0\x36\xca\x17\x0c\x3b\x71\x30\x75\x0f\xa8\xab\x4e\xd8\xf6\x19\xd4\xfa\x79\x04\xe4\xa1\x67\xed\xa8\xbf\x2b\xf8\x7b\x93\x53\xe1\x8a\x84\xa9\x41\x3e\x24\xdf\x67\x29\xa1\x21\xa1\xe3\x5e\x90\x84\x32\xa5\x9e\x31\x0a\x64\x14\xad\x9a\xc9\x84\xe8\x09\x4d\xca\x89\xae\x4f\xc6\x19\xcd\xa5\x91\xc4\x25\x25\x3f\x90\x9a\x9e\x9c\x20\xc9\x87\x04\xdb\x12\xc1\x08\x7d\x69\x43\x73\xa0\xb0\xb6\x92\xfa\xed\xa1\x6f\x94\x52\x11\x9d\xa5\xdc\x43\xb5\xd4\x23\xaf\xf9\x9e\x34\xa7\x78\x10\xec\x46\x12\xaf\x68\x4e\xd8\x60\x13\xea\x3d\x23\xa9\xd7\x0d\x91\xa1\x9a\xdf\x23\x1e\x64\x05\xbd\xaf\x98\x50\x34\x82\x92\x3b\x08\x93\x63\x72\x00\x7b\x10\x4f\x40\x64\x50\xd8\x07\x3d\x2b\x22\x15\x20\x4e\x92\x09\x9a\x35\x44\x6c\xf0\x6c\xf0\x8a\x67\x03\x7d\x1b\xc7\x3e\xc8\x98\xcc\x35\xf4\x2c\x40\xe2\x72\xf6\x63\xa3\xc9\xff\x90\x07\x7b\x90\xfc\x31\x47\xc3\x0d\x09\x8b\x18\x85\xd8\x09\x42\xc6\x7d\x64\xd1\xef\x2b\x80\x18\xe6\xec\x6b\x10\x3a\xcd\xcf\x59\x93\xfe\x75\x41\x84\x0e\x31\x34\xe5\x75\x01\x32\x04\xbd\x41\x3c\x72\x43\x4d\x8d\xd0\xe7\x77\xb4\x8f\xb0\xad\x97\x0d\xbf\x23\x36\x83\x70\x82\x04\xd9\x11\xa4\x63\x60\x4d\xbf\x58\x94\xdc\x4e\x3f\x06\x0f\xab\x1c\x15\x21\x8f\x23\x22\xe3\x3c\xf3\xca\xd1\xf1\x8b\xb6\xc6\x71\xc1\xb1\x2c\x4e\x18\x1c\xf7\x9f\x02\xfa\xab\x11\x12\x54\x2b\x00\x77\x68\x98\x5b\xea\x1a\xe2\x35\x6c\xe0\x0d\xb5\x39\x5a\xaa\x70\x10\x3c\x43\xe0\xdb\x0b\xb0\x51\x7e\x39\x1a\x60\xa3\xa4\x6f\x00\x6c\xe4\xe1\xae\xad\x00\x1b\x35\xd7\x01\x00\x3b\xc4\x33\xa7\x05\xd8\x68\x2f\xf4\xe4\x23\x39\x14\x5f\x55\x9d\x88\x32\xcf\x5f\x0d\x5f\xcf\xd8\x2e\xcf\x19\x01\x29\xa5\x39\xd0\x8d\x40\x15\x70\x4f\x41\xe9\xb5\x6d\x68\xfb\x14\xa9\x08\xe9\xce\x19\x4a\x5d\xe1\xd8\x47\x42\x68\x2b\x0c\x6d\x3f\xa3\xa6\x0e\xfd\x09\x4e\xdb\xa0\x25\x90\x13\x6a\x66\xde\x56\x06\x1a\x53\x49\x29\xbb\xe6\xeb\x48\x6b\x98\xbb\xea\xa9\x7e\x49\xdb\xd0\xb8\x8e\xf9\x40\x0f\x50\xff\x97\x2d\xa5\xb4\xda\x50\x8f\x05\x68\xcd\x4a\xea\xb1\x20\x0d\x5b\xd4\xef\x39\xd3\x10\xc3\x69\xd0\x70\x0f\xa3\xe0\xad\xef\x84\xa3\x82\x23\x3a\xa1\x33\xda\x96\xce\x2b\xb6\xc3\x50\xcf\x00\x65\x4b\xa0\x18\xa0\x4d\x29\x6f\xdf\x37\x8f\xdb\xe1\x88\x00\x48\xc9\x19\xeb\x84\xd4\x2e\x4a\x9a\x17\x51\x02\xe9\x1e\x94\x2c\x50\x08\x43\xbd\x0e\xe8\x12\xb6\xe3\x9c\xf2\x65\x43\x69\x1f\x74\x0d\xf3\x4b\xc7\xf4\x87\x29\x8a\xe1\x1e\x44\xd8\x9a\x37\x14\x9d\x40\xa5\xf2\xe6\x71\xfb\x1c\xfa\x36\x86\xb6\xf9\x21\x17\x54\x01\x14\x05\x76\xc3\xff\xf8\x9c\x16\xf4\x6c\x40\x19\x52\x3e\xce\x60\xb9\x67\x05\x4a\x87\x39\x40\x99\x20\x2f\x15\x4c\x35\xb8\x07\x92\x71\x5f\x09\x3e\x6a\xb9\x3f\x93\x1a\x9a\xa3\x64\xca\x04\x1f\x80\xce\x34\x35\xad\x97\x9a\x7b\x1d\xb8\x86\x79\x24\xfb\x3f\x50\x45\xde\xde\xaf\x24\xf5\x72\x5a\xee\xa9\xb4\x4c\x03\xe1\x6b\x7c\x87\x35\x07\xbd\xbf\x88\xbe\x39\x65\x00\x7c\x87\x79\x41\x19\x1f\x69\xd0\x61\xd1\xf7\x79\xe4\x66\x84\xec\xf1\x91\x77\x0f\xb1\x19\x31\xcf\xc9\xa2\xee\xcb\x91\x9a\x91\xf6\xf7\x11\x37\x3d\x98\xd2\x84\x90\x9b\x9d\x38\xe4\xee\x3c\x7a\x7c\x6a\x42\x13\xda\xb4\x0d\x85\x39\x54\x57\x08\x4d\xa8\xfa\x00\x39\x40\x23\xb4\x55\xe5\xe3\xae\x7e\xe8\x98\x38\x0e\xdd\xdc\x6e\xc6\xab\xe4\x93\x4d\x7d\x47\xa5\xdf\x1a\x6d\x92\xdd\x84\xa6\x61\x48\xa1\xd2\x03\x91\x1a\x24\x34\x43\x5e\x79\x0e\xa4\x86\x64\x7f\x0e\xa9\xe1\x93\xe4\xbb\x20\x35\x34\xcf\x61\x90\x1a\xe9\x91\x93\x43\x6a\x8c\xfd\xcf\x22\x31\x75\xf2\x5a\x88\x3a\x9e\xc2\x20\xa5\xc8\x9e\xc2\xb4\xd4\xb5\xc8\xf9\xc4\x1f\xa8\x40\x38\x71\xd6\x50\xfa\x74\x25\x51\x16\xdc\xeb\x78\xab\x22\x14\x01\x39\x6d\x7b\x24\x9a\x4e\xc8\x20\xfd\x23\x7d\x17\x96\xf0\x56\x0a\x4a\xaf\x06\x69\x96\x65\x20\x8d\x82\xba\x14\xdc\xa5\xa9\x90\xa6\x2d\x9f\x28\x2b\x89\x0a\x41\x4e\xc5\x15\x3b\xa8\x0b\x30\xdf\x38\xea\x10\x60\x2e\xcd\x47\x0b\x40\x73\x32\x41\xb4\x0b\xdf\x17\xbc\xe5\x82\xcf\xa0\x2d\xae\xa2\xfb\x21\x23\xd5\xd4\x3d\xc1\xd8\xba\xe5\x4e\x4a\x4b\xe9\x57\xb6\x44\x39\x44\x4b\x7a\x86\xed\x0b\xc7\x5d\x0f\x4b\xfa\x65\x1c\x2f\xaa\xfe\x3e\x3e\x51\x17\x4e\x13\x4a\x8a\x3d\x8e\x8b\x2b\xc4\x27\xd0\x88\xb0\x45\x62\x29\xed\x43\x5f\x9b\x91\x8f\x9b\x8a\x4f\xfe\x66\xa4\x67\xd8\x26\x49\x88\x1e\x49\xc9\x05\x98\x24\xdf\x42\xaf\x9a\x69\x62\xde\x1f\xdd\x00\xb5\x30\x74\x1f\x62\x9c\x95\xbc\xad\xa5\x79\xeb\xc4\x12\xa5\x33\x19\x6f\x57\x95\xf4\x1e\xf6\x42\x67\xe1\xc8\x3e\xc4\x2e\xcd\xdb\x3f\x78\x56\xb8\x56\x5a\xa6\x5e\x9a\xee\x85\xcc\x40\xeb\xf8\x0f\xf1\x16\xfe\xd2\xcd\x23\x7d\x01\x1d\x0b\x5d\xa2\x8c\x68\x15\x74\x81\xfe\x82\x4f\x31\xc2\x0e\xd0\x52\xac\x19\xd0\x14\xcb\x27\x0e\x61\x6b\x59\xf3\x3a\x10\xb4\x2e\x40\xad\x74\x4d\xb6\x62\x6d\x60\x2c\xfc\x0d\x8a\x84\x67\x50\x6c\x9c\x76\x04\x1d\x84\xef\x40\x8d\xc3\x71\x94\xe6\x91\xce\xe2\x19\xf6\x9d\x41\xc7\x74\x14\xd4\x4c\xf0\xba\x10\x3b\x4e\x35\xa6\x29\xf9\x01\x45\x2a\xd6\x1d\xd6\xfa\x5e\xaa\xb4\x1f\x9b\x2f\x12\xd5\xb7\xd0\xa4\xa1\x9f\xfb\x1c\x1c\xd1\x8f\xa0\x48\xa3\x3c\xf1\x8a\xd1\xfc\x29\x3d\xca\x8a\xa3\x82\x79\x7a\xc2\x83\x5d\x63\x7e\x36\xf5\xff\xd4\xf6\x39\x6a\x4f\x8a\xdb\x40\x41\x2f\xcb\x9b\xf1\xfb\x99\xd3\x28\x87\x3d\x0f\x6a\xa3\xa6\x78\x8a\xb9\x91\xbf\x9a\xdb\x0d\xbe\x51\xb3\x1e\x8a\xc2\x43\xbc\xf5\x02\x70\x1c\xed\x94\x1e\x97\xc7\xc1\x52\x66\xaf\x0b\xcb\x13\x6c\x54\x59\x02\x96\xdc\xf8\x71\x45\x5e\x7d\xbe\x51\x85\xb4\x19\xe8\x88\xa5\xb4\x28\x53\xda\x1c\x01\x18\xeb\x86\xd2\x6e\xca\x74\xa1\xd6\xd4\x0d\x49\x99\x8a\x24\xbc\xc9\x15\x3e\x83\x4a\x24\xd4\xf1\x80\x2c\x94\x48\x2d\x97\x3a\xe1\xb0\xb2\xa4\xae\x0e\x52\x21\x68\x00\x00\x5c\x70\xf7\x07\x14\x2c\x4b\x79\x13\x2a\xa3\xf4\x0f\x4a\x95\xf1\x61\x7f\x21\x29\xcd\x62\x6e\xa7\xb9\xa3\x22\xe8\x5e\xc8\x28\x19\xf4\x21\x65\x5b\xea\x82\x80\x36\x80\xa2\x61\x6e\x04\x1b\x97\xd3\x8f\x36\x0a\x0e\x5a\xb2\xff\x71\x84\xa6\x34\x0d\x4a\x51\x3b\xa2\x1f\x08\x52\xa1\x53\x94\x11\xc5\x00\x45\x43\x80\x81\x7f\xca\x84\xc6\xa4\xfd\x69\xa1\x92\xbb\x73\x19\x07\x22\xfe\x4e\x16\x44\xbb\x42\x4a\xb7\x6c\x77\x4a\x9d\x33\xcc\x07\xca\x21\xb8\x23\x85\x31\xb0\xbf\xe5\x8d\x73\xd0\x9c\x70\xf2\xb5\xa4\xee\x0f\x68\xa1\xe0\xf2\x4f\xc0\x6f\x19\x75\xb7\x02\x5d\x12\xa4\x17\x68\x89\xe1\xe7\x11\x7e\x0c\x93\xd3\x1a\x80\xdd\xf0\x59\xba\x85\x7a\x40\x36\x82\x33\xd6\x47\x78\xfe\xf2\x99\x81\xf1\x04\x0c\x64\xc4\x04\x07\x06\xc5\x21\x3e\x32\x62\xc6\xd3\x06\xc4\x17\x66\x27\x23\xdd\xf1\x70\x52\x66\xa0\xe2\xfc\x5f\x00\x00\x00\xff\xff\x01\xce\xa9\xdb\x00\x40\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 28672, mode: os.FileMode(420), modTime: time.Unix(1537904308, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"20180827021436_users_table.down.sql": _20180827021436_users_tableDownSql,
	"20180827021436_users_table.up.sql": _20180827021436_users_tableUpSql,
	"20180828183535_set_utc_timezone.down.sql": _20180828183535_set_utc_timezoneDownSql,
	"20180828183535_set_utc_timezone.up.sql": _20180828183535_set_utc_timezoneUpSql,
	"20180905005007_create_posts_table.down.sql": _20180905005007_create_posts_tableDownSql,
	"20180905005007_create_posts_table.up.sql": _20180905005007_create_posts_tableUpSql,
	"20180905005048_create_post_votes_table.down.sql": _20180905005048_create_post_votes_tableDownSql,
	"20180905005048_create_post_votes_table.up.sql": _20180905005048_create_post_votes_tableUpSql,
	"20180926005608_create_comments_table.down.sql": _20180926005608_create_comments_tableDownSql,
	"20180926005608_create_comments_table.up.sql": _20180926005608_create_comments_tableUpSql,
	"20180926010031_add_calculate_depth.down.sql": _20180926010031_add_calculate_depthDownSql,
	"20180926010031_add_calculate_depth.up.sql": _20180926010031_add_calculate_depthUpSql,
	"20180926010233_create_comment_votes_table.down.sql": _20180926010233_create_comment_votes_tableDownSql,
	"20180926010233_create_comment_votes_table.up.sql": _20180926010233_create_comment_votes_tableUpSql,
	"bindata.go": bindataGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"20180827021436_users_table.down.sql": &bintree{_20180827021436_users_tableDownSql, map[string]*bintree{}},
	"20180827021436_users_table.up.sql": &bintree{_20180827021436_users_tableUpSql, map[string]*bintree{}},
	"20180828183535_set_utc_timezone.down.sql": &bintree{_20180828183535_set_utc_timezoneDownSql, map[string]*bintree{}},
	"20180828183535_set_utc_timezone.up.sql": &bintree{_20180828183535_set_utc_timezoneUpSql, map[string]*bintree{}},
	"20180905005007_create_posts_table.down.sql": &bintree{_20180905005007_create_posts_tableDownSql, map[string]*bintree{}},
	"20180905005007_create_posts_table.up.sql": &bintree{_20180905005007_create_posts_tableUpSql, map[string]*bintree{}},
	"20180905005048_create_post_votes_table.down.sql": &bintree{_20180905005048_create_post_votes_tableDownSql, map[string]*bintree{}},
	"20180905005048_create_post_votes_table.up.sql": &bintree{_20180905005048_create_post_votes_tableUpSql, map[string]*bintree{}},
	"20180926005608_create_comments_table.down.sql": &bintree{_20180926005608_create_comments_tableDownSql, map[string]*bintree{}},
	"20180926005608_create_comments_table.up.sql": &bintree{_20180926005608_create_comments_tableUpSql, map[string]*bintree{}},
	"20180926010031_add_calculate_depth.down.sql": &bintree{_20180926010031_add_calculate_depthDownSql, map[string]*bintree{}},
	"20180926010031_add_calculate_depth.up.sql": &bintree{_20180926010031_add_calculate_depthUpSql, map[string]*bintree{}},
	"20180926010233_create_comment_votes_table.down.sql": &bintree{_20180926010233_create_comment_votes_tableDownSql, map[string]*bintree{}},
	"20180926010233_create_comment_votes_table.up.sql": &bintree{_20180926010233_create_comment_votes_tableUpSql, map[string]*bintree{}},
	"bindata.go": &bintree{bindataGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

